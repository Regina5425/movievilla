{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-8d6e3e9f90fb02e5.js","node_modules/@parcel/runtime-js/lib/runtime-697a957f5eae9de0.js","node_modules/@parcel/runtime-js/lib/runtime-6a6a08d31e7189c8.js","src/project/assets/js/workwithdata.js","node_modules/@parcel/runtime-js/lib/runtime-236a8ef173bea563.js","src/project/assets/js/favorite.js","src/project/assets/js/film.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"bWe1U\\\":\\\"film.6bac5249.js\\\",\\\"3nwA2\\\":\\\"heart_grey.45000755.svg\\\",\\\"5dbCN\\\":\\\"heart_red.d54e7003.svg\\\",\\\"98GFL\\\":\\\"oops-err.5cfb3e47.png\\\"}\"));","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"3nwA2\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"5dbCN\")).toString();","export function getDataFromLocal(str, param) {\r\n        let data = JSON.parse(localStorage.getItem(str));\r\n        if (!data) {\r\n            data = {\r\n                [param]: []\r\n            };\r\n        }\r\n        return data;\r\n}\r\n\r\nexport function setDataToLocal(data, str, param) {\r\n    localStorage.removeItem(str);\r\n    localStorage.setItem(str, JSON.stringify({[param]: data[param]}));\r\n}","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"98GFL\")).toString();","import heartGrey from \"../img/heart_grey.svg\";\r\nimport heartRed from \"../img/heart_red.svg\";\r\n\r\nimport {getDataFromLocal} from \"./workwithdata\";\r\nimport {setDataToLocal} from \"./workwithdata\";\r\n\r\nclass Favorite {\r\n    constructor(id) {\r\n        this.id = id;\r\n    }\r\n\r\n    render(node) {\r\n        let base = document.createElement('div');\r\n        base.classList.add('heart-circle');\r\n        base.dataset.id = this.id;\r\n\r\n        console.log(this.id);\r\n\r\n        let favorite = document.createElement('img');\r\n        favorite.alt = `heart`;\r\n        favorite.classList.add('heart');\r\n        let toogle = 0;\r\n        let favoritesFilm = getDataFromLocal(\"favorites\", \"films\");\r\n        let arrFavorites = favoritesFilm.films;\r\n        if (arrFavorites.length > 0) {\r\n            if (arrFavorites.includes(this.id)) {\r\n                favorite.src = heartRed;\r\n                toogle++;\r\n            } else {\r\n                favorite.src = heartGrey;\r\n            }\r\n        } else {\r\n                favorite.src = heartGrey;\r\n        }\r\n\r\n        base.addEventListener(\"click\", function(e) {\r\n            let active = e.currentTarget;\r\n            console.log(active);\r\n            let id = active.dataset.id;\r\n            console.log(id);\r\n            \r\n            if (!toogle) {\r\n                favorite.src = heartRed;\r\n                toogle++;\r\n                console.log(id);\r\n                favoritesFilm.films.push(id);\r\n            } else {\r\n                favorite.src = heartGrey;\r\n                toogle--;\r\n                favoritesFilm.films.splice(favoritesFilm.films.indexOf(id), 1);\r\n            }\r\n\r\n            setDataToLocal(favoritesFilm, \"favorites\", \"films\");\r\n\r\n        });\r\n\r\n        base.append(favorite);\r\n        node.append(base);\r\n    }\r\n}\r\n\r\nexport default Favorite;","import heartGrey from \"../img/heart_grey.svg\";\r\nimport heartRed from \"../img/heart_red.svg\";\r\nimport imgError from \"../img/oops-err.png\";\r\n\r\nimport {getDataFromLocal} from \"./workwithdata\";\r\nimport {setDataToLocal} from \"./workwithdata\";\r\n\r\nimport Favorite from \"./favorite\";\r\n\r\nconst id = localStorage.getItem(\"idFilm\");\r\nconst content = document.querySelector('.content');\r\nconst COUNT_ACTORS = 5;\r\n\r\nclass Film {\r\n    constructor(id) {\r\n        this.id = id;\r\n    }\r\n\r\n    async getInfoFromServer() {\r\n        try {\r\n            let url = 'https://imdb-api.com/en/API/Title/k_pg59pfpp/' + this.id + '/FullActor,FullCast,Posters,Images,Trailer,Ratings,Wikipedia,';\r\n            let response = await fetch(url);\r\n            let data = await response.json();\r\n            localStorage.setItem(\"film\", JSON.stringify(data));\r\n            return data;\r\n        } catch (error) {\r\n            console.log(error);\r\n            let errorImg = document.createElement('img');\r\n            errorImg.classList.add('error');\r\n            errorImg.alt = \"error page\";\r\n            errorImg.src = imgError;\r\n            content.append(errorImg);\r\n\r\n            let errorMsg = document.createElement('p');\r\n            errorMsg.textContent = 'Sorry. API_KEY spoiled.';\r\n            errorMsg.classList.add('error');\r\n            content.append(errorMsg);\r\n        }\r\n    }\r\n\r\n    async render() {\r\n        try {\r\n            let film = await this.getInfoFromServer();\r\n\r\n            let fragment = new DocumentFragment();\r\n\r\n            let divImageBlock = document.createElement('div');\r\n            divImageBlock.classList.add('illustration');\r\n\r\n            let image = document.createElement('img');\r\n            image.src = film.image;\r\n            image.alt = film.title;\r\n            image.classList.add('illustration__img');\r\n\r\n            let icon = new Favorite(id);\r\n            icon.render(divImageBlock);\r\n\r\n            let divTextBlock = document.createElement('div');\r\n            divTextBlock.classList.add('about-film');\r\n\r\n            let h2 = document.createElement('h2');\r\n            h2.textContent = film.title;\r\n            h2.classList.add('about-film__title');\r\n\r\n            let genres = document.createElement('p');\r\n            genres.textContent = film.genres;\r\n            genres.classList.add('color-text');\r\n\r\n            let year = document.createElement('p');\r\n            year.textContent = film.year;\r\n            year.classList.add('color-text');\r\n\r\n            let companies = document.createElement('p');\r\n            companies.textContent = film.companies;\r\n            companies.classList.add('color-text');\r\n\r\n            let rating = document.createElement('p');\r\n            rating.textContent = `IMDb: ${film.imDbRating}`;\r\n            rating.classList.add('color-text');\r\n\r\n            let plot = document.createElement('p');\r\n            plot.innerHTML = film.wikipedia.plotShort.html;\r\n            plot.classList.add('color-text');\r\n\r\n            let divActorBlock = document.createElement('div');\r\n            divActorBlock.classList.add('actors-block');\r\n        \r\n            let actors = film.actorList;\r\n\r\n            for (let i = 0; i < COUNT_ACTORS; i++) {\r\n                const element = actors[i];\r\n            \r\n                let figure = document.createElement('figure');\r\n                let imgActor = document.createElement('img');\r\n                imgActor.src = element.image;\r\n                imgActor.alt = element.name;\r\n                imgActor.classList.add('actors-block__img');\r\n                imgActor.width = 200;\r\n                let figcaption = document.createElement('figcaption');\r\n                figcaption.textContent = element.name;\r\n\r\n                divActorBlock.append(figure);\r\n                figure.append(imgActor);\r\n                figure.append(figcaption);\r\n            }\r\n\r\n            fragment.append(divImageBlock);\r\n            divImageBlock.append(image);\r\n\r\n            fragment.append(divTextBlock);\r\n            divTextBlock.append(h2);\r\n            divTextBlock.append(genres);\r\n            divTextBlock.append(year);\r\n            divTextBlock.append(companies);\r\n            divTextBlock.append(rating);\r\n            divTextBlock.append(plot);\r\n            divTextBlock.append(divActorBlock);\r\n\r\n            content.append(fragment);\r\n        } catch (error) {\r\n            console.log(error);\r\n            let errorImg = document.createElement('img');\r\n            errorImg.classList.add('error');\r\n            errorImg.alt = \"error page\";\r\n            errorImg.src = imgError;\r\n            content.append(errorImg);\r\n\r\n            let errorMsg = document.createElement('p');\r\n            errorMsg.textContent = 'Sorry. API_KEY spoiled.';\r\n            errorMsg.classList.add('error');\r\n            content.append(errorMsg);\r\n        }\r\n    }\r\n}\r\n\r\nlet film = new Film(id);\r\nfilm.render();"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$b8daa8bc7c5cc0e8$exports","URL","resolve","import","meta","url","toString","$d105712dc8c7ddf0$exports","$3880923b0d46e643$export$5a2e8b942d496a5f","str","param","data","localStorage","getItem","$763f6a04a62b9b9a$exports","$5b543cd49de95acc$export$2e2bcd8739ae039","constructor","this","render","node","base","document","createElement","classList","add","dataset","console","log","favorite","alt","toogle","favoritesFilm","arrFavorites","films","includes","src","$parcel$interopDefault","addEventListener","e","active","currentTarget","splice","indexOf","push","removeItem","setItem","stringify","append","$edc5d954303bdeab$var$id","$edc5d954303bdeab$var$content","querySelector","async","response","fetch","json","error","errorImg","errorMsg","textContent","film","getInfoFromServer","fragment","DocumentFragment","divImageBlock","image","title","divTextBlock","h2","genres","year","companies","rating","imDbRating","plot","innerHTML","wikipedia","plotShort","html","divActorBlock","actors","actorList","element","figure","imgActor","name","width","figcaption"],"version":3,"file":"film.6bac5249.js.map"}
{"mappings":"kpBAsBA,IAAAA,EACAC,E,iFArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,sMCAlD,IAAIC,EAAY,SAAUC,GAC7B,IAEIR,EAFSQ,EAAEC,cAECC,QAAQV,GACxBW,aAAaC,QAAQ,SAAUZ,E,MA0DnCa,EAvDA,MACIC,YAAYC,GACRC,KAAKC,MAAQF,EAAIE,MACjBD,KAAKE,KAAOH,EAAIG,KAChBF,KAAKG,MAAQJ,EAAII,MACjBH,KAAKhB,GAAKe,EAAIf,E,CAGlBoB,OAAOC,GACH,MAAMC,EAAW,IAAIC,iBAEfC,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAO,YACZH,EAAKI,UAAUC,IAAI,2BACnBL,EAAKd,QAAQV,GAAKgB,KAAKhB,GAEvBwB,EAAKM,iBAAiB,QAASvB,GAE/B,MAAMwB,EAAON,SAASC,cAAc,OACpCK,EAAKH,UAAUC,IAAI,sBAEnB,MAAMG,EAAMP,SAASC,cAAc,OACnCM,EAAIC,IAAM,SACVD,EAAIE,IAAMlB,KAAKC,MACfe,EAAIJ,UAAUC,IAAI,0BAElB,MAAMM,EAAOV,SAASC,cAAc,OACpCS,EAAKP,UAAUC,IAAI,2BAEnB,MAAMO,EAAOX,SAASC,cAAc,KACpCU,EAAKR,UAAUC,IAAI,8BACnBO,EAAKC,YAAcrB,KAAKE,KAExB,MAAMoB,EAAYb,SAASC,cAAc,KACzCY,EAAUV,UAAUC,IAAI,kCACxBS,EAAUD,YAAcrB,KAAKG,MAE7BG,EAASiB,OAAOf,GAChBA,EAAKe,OAAOR,GACZA,EAAKQ,OAAOP,GACZD,EAAKQ,OAAOJ,GACZA,EAAKI,OAAOD,GACZH,EAAKI,OAAOH,GAEZf,EAAKkB,OAAOjB,E,GCnDb,SAASkB,EAAiBC,EAAKC,GAC9B,IAAIC,EAAOtC,KAAKC,MAAMK,aAAaiC,QAAQH,IAM3C,OALKE,IACDA,EAAO,CACHD,CAACA,GAAQ,KAGVC,C,OCPfE,EAAiB,IAAAC,IAAoB,MAAQ3C,EAAA,SAAA4C,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,W,MCApGC,EAAiB,IAAAN,IAAoB,MAAQ3C,EAAA,SAAA4C,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,W,MC6DpGE,EAvDA,MACIvC,YAAYd,GACRgB,KAAKhB,GAAKA,C,CAGdoB,OAAOC,GACH,IAAIiC,EAAO7B,SAASC,cAAc,OAClC4B,EAAK1B,UAAUC,IAAI,gBACnByB,EAAK5C,QAAQV,GAAKgB,KAAKhB,GAEvBuD,QAAQC,IAAIxC,KAAKhB,IAEjB,IAAIyD,EAAWhC,SAASC,cAAc,OACtC+B,EAASxB,IAAM,QACfwB,EAAS7B,UAAUC,IAAI,SACvB,IAAI6B,EAAS,EACTC,EAAgBnB,EAAiB,YAAa,SAC9CoB,EAAeD,EAAcE,MAC7BD,EAAa7D,OAAS,GAClB6D,EAAaE,SAAS9C,KAAKhB,KAC3ByD,EAASvB,IAAM6B,EAAAX,GACfM,KAKAD,EAASvB,IAAM6B,EAAAlB,GAGvBS,EAAKxB,iBAAiB,SAAS,SAAStB,GACpC,IAAIwD,EAASxD,EAAEC,cACf8C,QAAQC,IAAIQ,GACZ,IAAIhE,EAAKgE,EAAOtD,QAAQV,GH5B7B,IAAwB2C,EAAMF,EAAKC,EG6B9Ba,QAAQC,IAAIxD,GAEP0D,GAMDD,EAASvB,IAAM6B,EAAAlB,GACfa,IACAC,EAAcE,MAAMI,OAAON,EAAcE,MAAMK,QAAQlE,GAAK,KAP5DyD,EAASvB,IAAM6B,EAAAX,GACfM,IACAH,QAAQC,IAAIxD,GACZ2D,EAAcE,MAAMM,KAAKnE,IHnCV2C,EG0CJgB,EH1CUlB,EG0CK,YH1CAC,EG0Ca,QHzCnD/B,aAAayD,WAAW3B,GACxB9B,aAAaC,QAAQ6B,EAAKpC,KAAKgE,UAAU,CAAC3B,CAACA,GAAQC,EAAKD,K,IG4CpDY,EAAKf,OAAOkB,GACZpC,EAAKkB,OAAOe,E,GCzDpBgB,EAAiB,IAAAxB,IAAoB,MAAQ3C,EAAA,SAAA4C,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WCMpG,MAAMoB,EAAiB9C,SAAS+C,cAAc,oBAE9C,IACIC,EADYjC,EAAiB,YAAa,SACfqB,MAE/B,GAAIY,EAAe1E,OAAS,EAAG,CAC3B,IAAI2E,EAAU,GAEb,OAAOC,IAEA,IACI,IAAK,IAAI7E,EAAI,EAAGA,EAAI6E,EAAe5E,OAAQD,IAAK,CAC5C,MAAM8E,QAAeC,EAAQF,EAAe7E,IAC5C,IAAK8E,EAAO5E,GACR,MAAM,IAAIE,MAAM,2BAEpBwE,EAAQ5E,GAAK,IAAIe,EAAK+D,GACtBF,EAAQ5E,GAAGsB,OAAOmD,GAClB,IAAIO,EAAO,IAAIzB,EAASuB,EAAO5E,IAC3B+E,EAAUtD,SAASuD,iBAAiB,uBACxCF,EAAK1D,OAAO2D,EAAQjF,G,EAE1B,MAAOmF,GACL1B,QAAQC,IAAIyB,GACZ,IAAIC,EAAWzD,SAASC,cAAc,OACtCwD,EAAStD,UAAUC,IAAI,SACvBqD,EAASjD,IAAM,aACfiD,EAAShD,IAAM6B,EAAAO,GACfC,EAAehC,OAAO2C,GAEtB,IAAIC,EAAW1D,SAASC,cAAc,KACtCyD,EAAS9C,YAAc,0BACvB8C,EAASvD,UAAUC,IAAI,SACvB0C,EAAehC,OAAO4C,E,CAEjC,EA3BA,CA2BEV,E,KAIA,CACH,IAAIW,EAAW3D,SAASC,cAAc,OACtC0D,EAASxD,UAAUC,IAAI,SACvBuD,EAAS/C,YAAc,4BACvBkC,EAAehC,OAAO6C,E,CAG1BC,eAAeR,EAAQ7E,GACnB,IACI,IAAIkD,EAAM,gDAAkDlD,EAAK,gEAC7DsF,QAAiBC,MAAMrC,GAE3B,aADiBoC,EAASE,M,CAE5B,MAAOP,GACL1B,QAAQC,IAAIyB,GACZ,IAAIE,EAAW1D,SAASC,cAAc,KACtCyD,EAAS9C,YAAc,kCACvB8C,EAASvD,UAAUC,IAAI,SACvB0C,EAAehC,OAAO4C,E","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-41da8271c91fea8d.js","src/project/assets/js/card.js","src/project/assets/js/workwithdata.js","node_modules/@parcel/runtime-js/lib/runtime-697a957f5eae9de0.js","node_modules/@parcel/runtime-js/lib/runtime-6a6a08d31e7189c8.js","src/project/assets/js/favorite.js","node_modules/@parcel/runtime-js/lib/runtime-236a8ef173bea563.js","src/project/assets/js/lk.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"lVwoi\\\":\\\"lk.98d3c753.js\\\",\\\"3nwA2\\\":\\\"heart_grey.45000755.svg\\\",\\\"5dbCN\\\":\\\"heart_red.d54e7003.svg\\\",\\\"98GFL\\\":\\\"oops-err.5cfb3e47.png\\\"}\"));","export let clickFilm = function (e) {\r\n    let active = e.currentTarget;\r\n    // let id = active.id;\r\n    let id = active.dataset.id;\r\n    localStorage.setItem(\"idFilm\", id);\r\n};\r\n\r\nclass Card {\r\n    constructor(obj) {\r\n        this.image = obj.image;\r\n        this.year = obj.year;\r\n        this.title = obj.title;\r\n        this.id = obj.id;\r\n    }\r\n\r\n    render(node) {\r\n        const fragment = new DocumentFragment();\r\n\r\n        const link = document.createElement('a');\r\n        link.href = \"film.html\";\r\n        link.classList.add('slider-arrow__card-link');\r\n        link.dataset.id = this.id;\r\n        // link.id = this.id;\r\n        link.addEventListener(\"click\", clickFilm);\r\n\r\n        const card = document.createElement('div');\r\n        card.classList.add('slider-arrow__card');\r\n\r\n        const img = document.createElement('img');\r\n        img.alt = \"poster\";\r\n        img.src = this.image;\r\n        img.classList.add('slider-arrow__card-img');\r\n\r\n        const text = document.createElement('div');\r\n        text.classList.add('slider-arrow__card-text');\r\n\r\n        const time = document.createElement('p');\r\n        time.classList.add('slider-arrow__card-text__p');\r\n        time.textContent = this.year;\r\n\r\n        const titleElem = document.createElement('p');\r\n        titleElem.classList.add('slider-arrow__card-text__title');\r\n        titleElem.textContent = this.title;\r\n\r\n        fragment.append(link);\r\n        link.append(card);\r\n        card.append(img);\r\n        card.append(text);\r\n        text.append(titleElem);\r\n        text.append(time);\r\n\r\n        node.append(fragment);\r\n    }\r\n\r\n    // clickFilm(e) {\r\n    //     let active = e.currentTarget;\r\n    //     let id = active.id;\r\n    //     localStorage.setItem(\"idFilm\", id);\r\n    // }\r\n\r\n}\r\n\r\nexport default Card;","export function getDataFromLocal(str, param) {\r\n        let data = JSON.parse(localStorage.getItem(str));\r\n        if (!data) {\r\n            data = {\r\n                [param]: []\r\n            };\r\n        }\r\n        return data;\r\n}\r\n\r\nexport function setDataToLocal(data, str, param) {\r\n    localStorage.removeItem(str);\r\n    localStorage.setItem(str, JSON.stringify({[param]: data[param]}));\r\n}","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"3nwA2\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"5dbCN\")).toString();","import heartGrey from \"../img/heart_grey.svg\";\r\nimport heartRed from \"../img/heart_red.svg\";\r\n\r\nimport {getDataFromLocal} from \"./workwithdata\";\r\nimport {setDataToLocal} from \"./workwithdata\";\r\n\r\nclass Favorite {\r\n    constructor(id) {\r\n        this.id = id;\r\n    }\r\n\r\n    render(node) {\r\n        let base = document.createElement('div');\r\n        base.classList.add('heart-circle');\r\n        base.dataset.id = this.id;\r\n\r\n        console.log(this.id);\r\n\r\n        let favorite = document.createElement('img');\r\n        favorite.alt = `heart`;\r\n        favorite.classList.add('heart');\r\n        let toogle = 0;\r\n        let favoritesFilm = getDataFromLocal(\"favorites\", \"films\");\r\n        let arrFavorites = favoritesFilm.films;\r\n        if (arrFavorites.length > 0) {\r\n            if (arrFavorites.includes(this.id)) {\r\n                favorite.src = heartRed;\r\n                toogle++;\r\n            } else {\r\n                favorite.src = heartGrey;\r\n            }\r\n        } else {\r\n                favorite.src = heartGrey;\r\n        }\r\n\r\n        base.addEventListener(\"click\", function(e) {\r\n            let active = e.currentTarget;\r\n            console.log(active);\r\n            let id = active.dataset.id;\r\n            console.log(id);\r\n            \r\n            if (!toogle) {\r\n                favorite.src = heartRed;\r\n                toogle++;\r\n                console.log(id);\r\n                favoritesFilm.films.push(id);\r\n            } else {\r\n                favorite.src = heartGrey;\r\n                toogle--;\r\n                favoritesFilm.films.splice(favoritesFilm.films.indexOf(id), 1);\r\n            }\r\n\r\n            setDataToLocal(favoritesFilm, \"favorites\", \"films\");\r\n\r\n        });\r\n\r\n        base.append(favorite);\r\n        node.append(base);\r\n    }\r\n}\r\n\r\nexport default Favorite;","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"98GFL\")).toString();","import Card from \"./card.js\";\r\nimport {getDataFromLocal} from \"./workwithdata\";\r\nimport {setDataToLocal} from \"./workwithdata\";\r\nimport Favorite from \"./favorite\";\r\nimport imgError from \"../img/oops-err.png\";\r\n\r\nconst blockFavorites = document.querySelector('.favorites-block');\r\n\r\nlet favorites = getDataFromLocal(\"favorites\", \"films\");\r\nlet arrayFavorites = favorites.films;\r\n\r\nif (arrayFavorites.length > 0) {\r\n    let arrCard = [];\r\n\r\n    (async (arrayFavorites) => {\r\n        \r\n            try {\r\n                for (let i = 0; i < arrayFavorites.length; i++) {\r\n                    const result = await getData(arrayFavorites[i]);\r\n                    if (!result.id) {\r\n                        throw new Error('Sorry. API_KEY spoiled.');\r\n                    }\r\n                    arrCard[i] = new Card(result);\r\n                    arrCard[i].render(blockFavorites);\r\n                    let icon = new Favorite(result.id);\r\n                    let arrIcon = document.querySelectorAll('.slider-arrow__card');\r\n                    icon.render(arrIcon[i]);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                let errorImg = document.createElement('img');\r\n                errorImg.classList.add('error');\r\n                errorImg.alt = \"error page\";\r\n                errorImg.src = imgError;\r\n                blockFavorites.append(errorImg);\r\n            \r\n                let errorMsg = document.createElement('p');\r\n                errorMsg.textContent = 'Sorry. API_KEY spoiled.';\r\n                errorMsg.classList.add('error');\r\n                blockFavorites.append(errorMsg);\r\n            }\r\n    })(arrayFavorites);\r\n\r\n\r\n\r\n} else {\r\n    let divError = document.createElement('div');\r\n    divError.classList.add('error');\r\n    divError.textContent = `Избранных фильмов нет :( `;\r\n    blockFavorites.append(divError);\r\n}\r\n\r\nasync function getData(id) {\r\n    try {\r\n        let url = 'https://imdb-api.com/en/API/Title/k_o0135nnp/' + id + '/FullActor,FullCast,Posters,Images,Trailer,Ratings,Wikipedia,';\r\n        let response = await fetch(url);\r\n        let data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error);\r\n        let errorMsg = document.createElement('p');\r\n        errorMsg.textContent = 'Sorry. Server is not avaliable.';\r\n        errorMsg.classList.add('error');\r\n        blockFavorites.append(errorMsg);\r\n    }\r\n}"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$cb86c2b9c66c0d14$export$be5da15dbcd87f53","e","currentTarget","dataset","localStorage","setItem","$cb86c2b9c66c0d14$export$2e2bcd8739ae039","constructor","obj","this","image","year","title","render","node","fragment","DocumentFragment","link","document","createElement","href","classList","add","addEventListener","card","img","alt","src","text","time","textContent","titleElem","append","$3880923b0d46e643$export$5a2e8b942d496a5f","str","param","data","getItem","$b8daa8bc7c5cc0e8$exports","URL","resolve","import","meta","url","toString","$d105712dc8c7ddf0$exports","$5b543cd49de95acc$export$2e2bcd8739ae039","base","console","log","favorite","toogle","favoritesFilm","arrFavorites","films","includes","$parcel$interopDefault","active","splice","indexOf","push","removeItem","stringify","$763f6a04a62b9b9a$exports","$6383a96e3079b386$var$blockFavorites","querySelector","$6383a96e3079b386$var$arrayFavorites","arrCard","arrayFavorites","result","$6383a96e3079b386$var$getData","icon","arrIcon","querySelectorAll","error","errorImg","errorMsg","divError","async","response","fetch","json"],"version":3,"file":"lk.98d3c753.js.map"}